<link rel="stylesheet" href="/admin/userMangement.css">
<link rel="stylesheet" href="/admin/productManagement.css">
<link rel="stylesheet" href="/admin/offer.css">
<aside class="sidebar">
  <div class="logo">
    <a class="navbar-brand" href="index.html">CRAV<span style="font-weight:lighter;">E</span></a>
  </div>
  <nav class="menu">
    <ul>
      <li><a href="/admin/dashboard">Dashboard</a></li>
      <li><a href="/admin/productManagement">Products</a></li>
      <li><a href="/admin/orderManagement">Orders</a></li>
      <li class="higlight"><a href="/admin/couponManagement">Coupon</a></li>
      <li><a href="/admin/inventory">Inventory</a></li>
      <li><a href="/admin/offerManagement">Offers</a></li>
      <li><a href="/admin/userManagement"> User Management</a></li>
      <li><a href="/admin/category"> Category</a></li>
      <li><a href="/admin/salesReport"> Sales Report</a></li>

    </ul>
  </nav>
</aside>

<!-- Main Content -->
<div class="main-content">
  <header class="dashboard-header">

    <h1>Coupon Management</h1>
    <div>

      <form class="form-inline my-2 my-lg-0" action="/admin/orderManagement/search" method="GET">
        <input class="form-control mr-sm-2" type="search" name="search" placeholder="Search" aria-label="Search">

      </form>
    </div>
  </header>
  <button class="add-btn" onclick="openCreateCouponModal()">Create Coupon</button>
  <!-- User Table Section -->
  {{#if coupons}}
  <section class="user-table">

    <h2>All Coupon</h2>

    <div class="table-container">
      <table>
        <thead>
          <tr>

            <th>Coupon Code</th>
            <th>Discount Type</th>
            <th>Discount Value</th>
            <th>Minimum Cart value</th>
            <th>Maximum Purchase Limit</th>
            <th>Usage limit</th>
            <th>Expire Date</th>
            <th>Description</th>
            <th>Applicable Products</th>
            <th>Applicable Categories</th>
            <th>Actions</th>

          </tr>
        </thead>
        <tbody>

          {{#each coupons}}
          <tr>
            <td>{{this.code}}</td>
            <td>{{this.discountType}}</td>
            <td>{{this.discountValue}}</td>
            <td> {{this.minimumCartValue}} </td>
            <td> {{this.maximumPurchaseLimit}} </td>
            <td>{{this.usageLimit}}</td>
            <td>{{formatDate this.expiryDate}}</td>
            <td> {{this.description}} </td>
            <td>
              {{#if (isAllProductsApplicable ../product this.applicableProducts)}}
              <div>All Products</div>
              {{else}}
              {{#each this.applicableProducts}}
              <div>{{this.name}}</div>
              {{/each}}
              {{/if}}
            </td>
            <td>
              {{#if (isAllCategoryApplicable ../category this.applicableCategories)}}
              <div>All Categories </div>
              {{else}}
              {{#each this.applicableCategories}}
              <div>{{this.name}}</div>
              {{/each}}
              {{/if}}
            </td>
            <td>
              <div style="display: flex; gap: 20px;">
                <button class="btn btn-dark" onclick="openEditCouponModal('{{this._id}}', 
                                     '{{this.code}}', 
                                     '{{this.discountType}}', 
                                     '{{this.discountValue}}', 
                                     '{{this.minimumCartValue}}', 
                                     '{{this.maximumPurchaseLimit}}', 
                                     '{{this.usageLimit}}', 
                                     {{json this.applicableProducts}}, 
                                     {{json this.applicableCategories}}, 
                                     '{{this.expiryDate}}', 
                                     '{{this.description}}')">
                  Edit
                </button>


                <form action="/admin/couponManagement/delete/{{this.id}}?_method=DELETE" method="post">
                  <button type="submit" class="btn btn-dark">Delete</button>
                </form>
              </div>
            </td>
          </tr>
          {{/each}}
        </tbody>
      </table>

    </div>

  </section>
  {{else}}

  <div class="no-results ">
    <div class="icon">üîç</div>
    <div class="message">No results found</div>
    <div class="sub-message">Try adjusting your search to find what you're looking for.</div>
  </div>

  {{/if}}
  {{!-- pagination --}}

  <nav aria-label="Page navigation">
    <ul class="pagination justify-content-center pages custom-pagination">
      {{#if previousPage}}
      <li class="page-item">
        <a class="page-link" href="?page={{previousPage}}" aria-label="Previous">
          <span aria-hidden="true">&laquo;</span>
        </a>
      </li>
      {{/if}}

      {{#each (range 1 totalPages)}}
      <li class="page-item {{#if (isEqual this ../currentPage)}}active{{/if}}">
        <a class="page-link" href="?page={{this}}">{{this}}</a>
      </li>
      {{/each}}

      {{#if nextPage}}
      <li class="page-item">
        <a class="page-link" href="?page={{nextPage}}" aria-label="Next">
          <span aria-hidden="true">&raquo;</span>
        </a>
      </li>
      {{/if}}
    </ul>
  </nav>

  {{!-- end pagination --}}

</div>

{{!-- Create Coupon Modal --}}
<div class="modal" id="createCouponModal" style="display:none;">
  <div class="modal-content">
    <span class="close" onclick="closeCreateCouponModal()">&times;</span>
    <h2>Create Coupon</h2>
    <form id="CreateCouponForm" method="POST" action="/admin/couponManagement/create">

      <label for="code">Coupon Code:</label>
      <div id="couponCodeError" class="error-message" style="color: red;"></div>
      <input type="text" id="code" name="code" required placeholder="Enter coupon code" />

      <label for="discountType">Discount Type:</label>
      <div id="discountTypeError" class="error-message" style="color: red;"></div>
      <select id="discountType" name="discountType" required>
        <option value="fixed">Fixed</option>
        <option value="percentage">Percentage</option>
      </select>

      <label for="discountValue">Discount Value:</label>
      <div id="discountValueError" class="error-message" style="color: red;"></div>
      <input type="number" id="discountValue" name="discountValue" required min="0"
        placeholder="Enter discount value" />

      <label for="minimumCartValue">Minimum Cart Value:</label>
      <div id="minimumCartValueError" class="error-message" style="color: red;"></div>
      <input type="number" id="minimumCartValue" name="minimumCartValue" min="0"
        placeholder="Enter minimum cart value" />


      <label for="maximumPurchhaseLimit">Mximum Purchase Limit:</label>
      <div id="maximumPurchhaseLimitError" class="error-message" style="color: red;"></div>
      <input type="number" id="maximumPurchhaseLimit" name="maximumPurchaseLimit" min="0"
        placeholder="Enter maximum purchase  Limit" />

      <label for="usageLimit">Usage Limit:</label>
      <input type="number" id="usageLimit" name="usageLimit" min="1" placeholder="Enter usage limit" />

      <label for="applicableProducts">Applicable Products:</label>
      <select id="applicableProducts" name="applicableProducts" class="select-group" multiple>
        <option value="all">All Products</option>
        {{#each product}}
        <option value="{{this._id}}">{{this.name}}</option>
        {{/each}}
      </select>

      <label for="applicableCategories">Applicable Categories:</label>
      <select id="applicableCategories" name="applicableCategories" class="select-group" multiple>
        <option value="all">All Categories</option>
        {{#each category}}
        <option value="{{this._id}}">{{this.name}}</option>
        {{/each}}
      </select>

      <label for="expiryDate">Expiration Date:</label>
      <div id="expiryDateError" class="error-message" style="color: red;"></div>
      <input type="date" id="expiryDate" name="expiryDate" required />

      <label for="description">Description:</label>
      <textarea id="description" name="description" required placeholder="Describe the coupon offer..."></textarea>

      <button type="submit" class="btn">Create Coupon</button>
    </form>
  </div>
</div>
{{!-- End Create Coupon Modal --}}



{{!-- Edit Coupon Modal --}}
<div class="modal" id="editCouponModal" style="display:none;">
  <div class="modal-content">
    <span class="close" onclick="closeEditCouponModal()">&times;</span>
    <h2>Edit Coupon</h2>
    <form id="EditCouponForm" method="POST" action="/admin/couponManagement/edit?_method=PUT">

      <!-- Hidden field for Coupon ID -->
      <input type="hidden" id="couponId" name="couponId" />

      <label for="code">Coupon Code:</label>
      <div id="editCodeError" class="error-message" style="color: red;"></div>
      <input type="text" id="editCode" name="code" required placeholder="Enter coupon code" />

      <label for="discountType">Discount Type:</label>
      <div id="editDiscountTypeError" class="error-message" style="color: red;"></div>
      <select id="editDiscountType" name="discountType" required>
        <option value="fixed">Fixed</option>
        <option value="percentage">Percentage</option>
      </select>

      <label for="discountValue">Discount Value:</label>
      <div id="editDiscountValueError" class="error-message" style="color: red;"></div>
      <input type="number" id="editDiscountValue" name="discountValue" required min="0"
        placeholder="Enter discount value" />
      <div id="discountError" style="color: red;"></div>

      <label for="minimumCartValue">Minimum Cart Value:</label>
      <input type="number" id="editMinimumCartValue" name="minimumCartValue" min="0"
        placeholder="Enter minimum cart value" />

      <label for="maximumPurchaseLimit">Maximum Purchase Limit:</label>
      <input type="number" id="editMaximumPurchaseLimit" name="maximumPurchaseLimit" min="0"
        placeholder="Enter maximum purchase limit" />

      <label for="usageLimit">Usage Limit:</label>
      <input type="number" id="editUsageLimit" name="usageLimit" min="1" placeholder="Enter usage limit" />

      <label for="editApplicableProducts">Applicable Products:</label>
      <select id="editApplicableProducts" name="applicableProducts" class="select-group" multiple>
        <option value="all">All Products</option>
        {{#each product}}
        <option value="{{this._id}}">{{this.name}}</option>
        {{/each}}
      </select>

      <label for="editApplicableCategories">Applicable Categories:</label>
      <select id="editApplicableCategories" name="applicableCategories" class="select-group" multiple>
        <option value="all">All Categories</option>
        {{#each category}}
        <option value="{{this._id}}">{{this.name}}</option>
        {{/each}}
      </select>

      <label for="editExpiryDate">Expiration Date:</label>
      <div id="editExpiryDateError" class="error-message" style="color: red;"></div>
      <input type="date" id="editExpiryDate" name="expiryDate" required />

      <label for="editDescription">Description:</label>
      <textarea id="editDescription" name="description" required placeholder="Describe the coupon offer..."></textarea>

      <button type="submit" class="btn">Update Coupon</button>
    </form>
  </div>
</div>
{{!-- End Edit Coupon Modal --}}


<script>

  //------------add offer modal starts-------------


  function openCreateCouponModal() {
    document.getElementById("createCouponModal").style.display = "block"
  }

  function closeCreateCouponModal() {
    document.getElementById("createCouponModal").style.display = "none"
  }

  const today = new Date();

  const year = today.getFullYear();
  const month = String(today.getMonth() + 1).padStart(2, '0');
  const day = String(today.getDate()).padStart(2, '0');
  const formattedDate = `${year}-${month}-${day}`;

  const expiryDateField = document.getElementById('expiryDate');
  const editExpiryDateFiled = document.getElementById("editExpiryDate")
  expiryDateField.min = formattedDate;
  editExpiryDateFiled.min = formattedDate

  document.getElementById('CreateCouponForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    const form = e.target;
    const submitBtn = form.querySelector('button[type="submit"]');
    submitBtn.disabled = true;

    const errorFields = [
      'couponCode', 'discountType', 'discountValue', 'minimumCartValue',
      'maximumPurchhaseLimit', 'expiryDate', 'description'
    ];
    errorFields.forEach(field => {
      const el = document.getElementById(`${field}Error`);
      if (el) el.innerText = '';
    });
    const formData = new FormData(form);
    const jsonData = {};
    formData.forEach((value, key) => {
      jsonData[key] = value;
    });
    try {
      const response = await fetch(form.action, {
        method: form.method,
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(jsonData),
      });

      if (!response.ok) {
        const data = await response.json();

        if (data.errors) {
          for (const [field, msg] of Object.entries(data.errors)) {
            const el = document.getElementById(`${field}Error`);
            if (el) el.innerText = msg;
          }
        } else if (data.message) {
          alert(data.message);
        }
      } else {
        closeCreateCouponModal();
        window.location.reload();
      }
    } catch (err) {
      console.error('Error submitting create coupon:', err);
      alert('An error occurred. Please try again.');
    } finally {
      submitBtn.disabled = false;
    }
  });




  // ---------------add modal ends---------------



  // -------------edit modal strats-----------------
  function openEditCouponModal(id, code, discountType, discountValue, minimumCartValue, maximumPurchaseLimit, usageLimit, applicableProducts, applicableCategories, expiryDate, description) {
    document.getElementById("couponId").value = id;

    document.getElementById("editCode").value = code;
    document.getElementById("editDiscountType").value = discountType;
    document.getElementById("editDiscountValue").value = discountValue;
    document.getElementById("editMinimumCartValue").value = minimumCartValue;
    document.getElementById("editMaximumPurchaseLimit").value = maximumPurchaseLimit;
    document.getElementById("editUsageLimit").value = usageLimit;
    document.getElementById("editDescription").value = description;
    document.getElementById("editExpiryDate").value = expiryDate;
    const date = new Date(expiryDate)
    const formatedDate = date.toISOString().split("T")[0]
    document.getElementById("editExpiryDate").value = formatedDate;

    const productsSelect = document.getElementById("editApplicableProducts");
    productsSelect.innerHTML = '<option value="all">All Products</option>';
    applicableProducts.forEach(product => {
      const option = document.createElement("option");
      option.value = product._id;
      option.text = product.name;
      option.selected = true;
      productsSelect.appendChild(option);
    });

    const categoriesSelect = document.getElementById("editApplicableCategories");
    categoriesSelect.innerHTML = '<option value="all">All Categories</option>';
    applicableCategories.forEach(category => {
      const option = document.createElement("option");
      option.value = category._id;
      option.text = category.name;
      option.selected = true;
      categoriesSelect.appendChild(option);
    });

    document.getElementById("editCouponModal").style.display = "block";
  }

  document.getElementById('EditCouponForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    const form = e.target;
    const submitBtn = form.querySelector('button[type="submit"]');
    submitBtn.disabled = true;
const errorKeyMap = {
  code: 'editCode',
  discountType: 'editDiscountType',
  discountValue: 'editDiscountValue',
  minimumCartValue: 'editMinimumCartValue',
  maximumPurchaseLimit: 'editMaximumPurchaseLimit',
  expiryDate: 'editExpiryDate',
  description: 'editDescription'
};

    Object.values(errorKeyMap).forEach(fieldId => {
    const el = document.getElementById(`${fieldId}Error`);
    if (el) el.innerText = '';
  });

    const formData = new FormData(form);
    const jsonData = {};

    for (const [key, value] of formData.entries()) {
      if (jsonData[key]) {
        if (Array.isArray(jsonData[key])) {
          jsonData[key].push(value);
        } else {
          jsonData[key] = [jsonData[key], value];
        }
      } else {
        jsonData[key] = value;
      }
    }

    try {
      const response = await fetch(form.action, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(jsonData),
      });

      if (!response.ok) {
        const data = await response.json();
        if (data.errors) {
          for (const [field, msg] of Object.entries(data.errors)) {
    const domKey = errorKeyMap[field] || field;
    const el = document.getElementById(`${domKey}Error`);
    if (el) el.innerText = msg;
  }
        } else if (data.message) {
          alert(data.message);
        }
      } else {
        closeEditCouponModal();
        window.location.reload();
      }
    } catch (err) {
      console.error('Error submitting edit coupon:', err);
      alert('An error occurred. Please try again.');
    } finally {
      submitBtn.disabled = false;
    }
  });


  function closeEditCouponModal() {
    document.getElementById("editCouponModal").style.display = "none";
  }



</script>