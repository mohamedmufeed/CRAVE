<link rel="stylesheet" href="/admin/userMangement.css">
<link rel="stylesheet" href="/admin/productManagement.css">
<link rel="stylesheet" href="/admin/offer.css">
<aside class="sidebar">
  <div class="logo">
    <a class="navbar-brand" href="index.html">CRAV<span style="font-weight:lighter;">E</span></a>
  </div>
  <nav class="menu">
    <ul>
      <li><a href="/admin/dashboard">Dashboard</a></li>
      <li><a href="/admin/productManagement">Products</a></li>
      <li><a href="/admin/orderManagement">Orders</a></li>
      <li><a href="/admin/couponManagement">Coupon</a></li>
      <li><a href="/admin/inventory">Inventory</a></li>
      <li class="higlight"><a href="/admin/offerManagement">Offers</a></li>
      <li><a href="/admin/userManagement"> User Management</a></li>
      <li><a href="/admin/category"> Category</a></li>
      <li><a href="/admin/salesReport"> Sales Report</a></li>

    </ul>
  </nav>
</aside>

<!-- Main Content -->
<div class="main-content">
  <header class="dashboard-header">

    <h1>Offer Management</h1>
    <div>

      <form class="form-inline my-2 my-lg-0" action="/admin/orderManagement/search" method="GET">
        <input class="form-control mr-sm-2" type="search" name="search" placeholder="Search" aria-label="Search">

      </form>
    </div>
  </header>
  <button class="add-btn" onclick="openCreateOfferModal()">Create Offer</button>
  <!-- User Table Section -->
  {{#if offers}}
  <section class="user-table">
    <h2>All Offers</h2>

    <div class="table-container">
      <table>
        <thead>
          <tr>

            <th>Discount Type</th>
            <th>Discount Value</th>
            <th>Description</th>
            <th>Applicable Products</th>
            <th>Applicable Categories</th>
            <th>Expire Date</th>
            <th>Status</th>
            <th>Actions</th>

          </tr>
        </thead>
        <tbody>

          {{#each offers}}
          <tr>

            <td>{{this.discountType}}</td>
            <td>{{this.discountValue}}</td>

            <td> {{this.description}} </td>

            <td>
              {{#if (isAllProductsApplicable ../product this.applicableProducts)}}
              <div>All Products</div>
              {{else}}
              {{#each this.applicableProducts}}
              <div>{{this.name}}</div>
              {{/each}}
              {{/if}}
            </td>

            <td>
              {{#if (isAllCategoryApplicable ../category this.applicableCategories)}}
              <div>All Categories </div>
              {{else}}
              {{#each this.applicableCategories}}
              <div>{{this.name}}</div>
              {{/each}}
              {{/if}}
            </td>

            <td>{{formatDate this.expirationDate}}</td>
            <td>

              {{#if this.isActive}}Active{{else}}Non Active{{/if}}
            </td>
            <td>
              <div style="display: flex; gap: 20px;">
                <button class="btn btn-dark"
                  onclick="openEditOfferModal('{{this.id}}', '{{this.discountType}}', '{{this.discountValue}}', '{{this.description}}', '{{this.expirationDate}}', '{{this.isActive}}', {{json this.applicableProducts}}, {{json this.applicableCategories}})">Edit</button>


                <form action="/admin/offerManagement/delete/{{this.id}}" method="post">
                  <button type="submit" class="btn btn-dark">Delete</button>
                </form>

              </div>
            </td>
          </tr>
          {{/each}}
        </tbody>
      </table>

    </div>

  </section>
  {{else}}
  <div class="no-results ">
    <div class="icon">üîç</div>
    <div class="message">No results found</div>
    <div class="sub-message">Try adjusting your search to find what you're looking for.</div>
  </div>

  {{/if}}
  {{!-- pagination --}}

  <nav aria-label="Page navigation">
    <ul class="pagination justify-content-center pages custom-pagination">
      {{#if previousPage}}
      <li class="page-item">
        <a class="page-link" href="?page={{previousPage}}" aria-label="Previous">
          <span aria-hidden="true">&laquo;</span>
        </a>
      </li>
      {{/if}}

      {{#each (range 1 totalPages)}}
      <li class="page-item {{#if (isEqual this ../currentPage)}}active{{/if}}">
        <a class="page-link" href="?page={{this}}">{{this}}</a>
      </li>
      {{/each}}

      {{#if nextPage}}
      <li class="page-item">
        <a class="page-link" href="?page={{nextPage}}" aria-label="Next">
          <span aria-hidden="true">&raquo;</span>
        </a>
      </li>
      {{/if}}
    </ul>
  </nav>

  {{!-- end pagination --}}

</div>

{{!-- Create Offer Modal --}}
<div class="modal" id="createOfferModal" style="display:none;">
  <div class="modal-content">
    <span class="close" onclick="closeCreateOfferModal()">&times;</span>
    <h2>Create Offer</h2>
    <form id="CreateOfferForm" method="POST" action="/admin/offerManagement/create">

      <label for="discountType">Discount Type:</label>
      <div id="discountTypeError" class="error-message" style="color: red;"></div>
      <select id="discountType" name="discountType" required>
        <option value="fixed">Fixed</option>
        <option value="percentage">Percentage</option>
      </select>

      <label for="discountValue">Discount Value:</label>
      <div id="discountValueError" class="error-message" style="color: red;"></div>
      <input type="number" id="discountValue" name="discountValue" min="0" />

      <label for="applicableProducts">Applicable Products:</label>
      <select id="applicableProducts" name="applicableProducts" class="select-group" multiple>
        <option value="all">All Products</option>
        {{#each product}}
        <option value="{{this._id}}">{{this.name}}</option>
        {{/each}}
      </select>

      <label for="applicableCategories">Applicable Categories:</label>
      <select id="applicableCategories" name="applicableCategories" class="select-group" multiple>
        <option value="all">All Categories</option>
        {{#each category}}
        <option value="{{this._id}}">{{this.name}}</option>
        {{/each}}
      </select>
      <label for="expirationDate">Expiration Date:</label>
      <div id="expirationDateError" class="error-message" style="color: red;"></div>
      <input type="date" id="expirationDate" name="expirationDate" required style="padding: 8px; font-size: 16px;" />

      <div style="display: flex;margin-top: 10px;">
        <label for="isActive">Active:</label>
        <label class="switch">
          <input type="checkbox" id="isActive" name="isActive" checked />
          <span class="slider round"></span>
        </label>
      </div>


      <label for="description">Description:</label>
      <div id="descriptionError" class="error-message" style="color: red;"></div>
      <textarea id="description" name="description" required placeholder="Describe the offer..."
        style="padding: 8px; font-size: 16px;"></textarea>

      <button type="submit" class="btn">Create Offer</button>
    </form>
  </div>
</div>

{{!-- end craete Offer modal --}}

{{!-- strat edit offer modal --}}

<div class="modal" id="editOfferModal" style="display:none;">
  <div class="modal-content">
    <span class="close" onclick="closeEditOfferModal()">&times;</span>
    <h2>Edit Offer</h2>
    <form id="EditOfferForm" method="POST" action="/admin/offerManagement/edit?_method=PUT">
      <input type="hidden" id="offerId" name="offerId" />

      <label for="editDiscountType">Discount Type:</label>
      <div id="editDiscountTypeError" class="error-message" style="color: red;"></div>
      <select id="editDiscountType" name="discountType" required>
        <option value="fixed">Fixed</option>
        <option value="percentage">Percentage</option>
      </select>

      <label for="editDiscountValue">Discount Value:</label>
      <div id="editDiscountValueError" class="error-message" style="color: red;"></div>
      <input type="number" id="editDiscountValue" name="discountValue" required min="0" />
      <div id="editDiscountValueError" style="color: red;"></div>

      <label for="editApplicableProducts">Applicable Products:</label>
      <select id="editApplicableProducts" name="applicableProducts" class="select-group" multiple required>
        <option value="all">All Products</option>
        {{#each product}}
        <option value="{{this._id}}">{{this.name}}</option>
        {{/each}}
      </select>

      <label for="editApplicableCategories">Applicable Categories:</label>
      <select id="editApplicableCategories" name="applicableCategories" class="select-group" multiple required>
        <option value="all">All Categories</option>
        {{#each category}}
        <option value="{{this._id}}">{{this.name}}</option>
        {{/each}}
      </select>

      <label for="editExpirationDate">Expiration Date:</label>
      <div id="editExpirationDateError" class="error-message" style="color: red;"></div>

      <input type="date" id="editExpirationDate" name="expirationDate" required
        style="padding: 8px; font-size: 16px;" />

      <div style="display: flex;margin-top: 10px;">
        <label for="editIsActive">Active:</label>
        <label class="switch">
          <input type="checkbox" id="editIsActive" name="isActive" />
          <span class="slider round"></span>
        </label>
      </div>

      <label for="editDescription">Description:</label>
      <div id="editDescriptionError" class="error-message" style="color: red;"></div>
      <textarea id="editDescription" name="description" required placeholder="Describe the offer..."
        style="padding: 8px; font-size: 16px;"></textarea>

      <button type="submit" class="btn">Update Offer</button>
    </form>
  </div>
</div>

{{!-- end edit editOfferModal --}}

<script>

  //------------add offer modal starts-------------


  function openCreateOfferModal() {
    document.getElementById("createOfferModal").style.display = "block"
  }

  function closeCreateOfferModal() {
    document.getElementById("createOfferModal").style.display = "none"
  }


  document.getElementById("createOfferModal").addEventListener("submit", async (event) => {
    event.preventDefault()
    const from = event.target
    const submitBtn = from.querySelector('button[type="submit"]')
    submitBtn.disabled = true
    const errorFields = [
      "discountType", "discountValue", "expirationDate", "description"
    ]
    errorFields.forEach(field => {
      const el = document.getElementById(`${field}Error`);
      if (el) el.innerText = '';
    });
    const formData = new FormData(from)
    const data = {}
    for (const [key, value] of formData.entries()) {
      if (data[key]) {
        if (Array.isArray(data[key])) {
          data[key].push(value);
        } else {
          data[key] = [data[key], value];
        }
      } else {
        data[key] = value;
      }
    }


    try {
      const response = await fetch(from.action, {
        method: from.method,
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })

      if (!response.ok) {
        const data = await response.json()
        if (data.errors) {
          for (const [field, msg] of Object.entries(data.errors)) {
            const el = document.getElementById(`${field}Error`);
            if (el) el.innerText = msg;
          }
        } else if (data.message) {
          alert(data.message);
        }
      } else {
        closeCreateOfferModal();
        window.location.reload();
      }
    } catch (err) {
      console.error('Error submitting create offer:', err);
      alert('An error occurred. Please try again.');
    } finally {
      submitBtn.disabled = false;
    }
  })


  const today = new Date();

  const year = today.getFullYear();
  const month = String(today.getMonth() + 1).padStart(2, '0');
  const day = String(today.getDate()).padStart(2, '0');
  const formattedDate = `${year}-${month}-${day}`;

  const expiryDateField = document.getElementById('expirationDate');
  const editExpiryDateFiled = document.getElementById("editExpirationDate")
  expiryDateField.min = formattedDate;
  editExpiryDateFiled.min = formattedDate



  // ---------------add modal ends---------------



  //---------------edit modal-------------\


  function openEditOfferModal(id, discountType, discountValue, description, expirationDate, isActive, applicableProducts, applicableCategories) {
    document.getElementById("offerId").value = id;
    document.getElementById("editDiscountType").value = discountType;
    document.getElementById("editDiscountValue").value = discountValue;
    document.getElementById("editDescription").value = description;


    const date = new Date(expirationDate)
    const formatedDate = date.toISOString().split("T")[0]
    document.getElementById("editExpirationDate").value = formatedDate;

    document.getElementById("editIsActive").checked = isActive;

    const productsSelect = document.getElementById("editApplicableProducts");
    productsSelect.innerHTML = '<option value="all">All Products</option>';
    applicableProducts.forEach(product => {
      const option = document.createElement("option");
      option.value = product._id;
      option.text = product.name;
      option.selected = true;
      productsSelect.appendChild(option);
    });

    const categoriesSelect = document.getElementById("editApplicableCategories");
    categoriesSelect.innerHTML = '<option value="all">All Categories</option>';
    applicableCategories.forEach(category => {
      const option = document.createElement("option");
      option.value = category._id;
      option.text = category.name;
      option.selected = true;
      categoriesSelect.appendChild(option);
    });

    document.getElementById("editOfferModal").style.display = "block";
  }

  function closeEditOfferModal() {
    document.getElementById("editOfferModal").style.display = "none";
  }

  document.getElementById("editOfferModal").addEventListener("submit", async (e) => {
    event.preventDefault()

    const form = e.target;
    const submitBtn = form.querySelector('button[type="submit"]');
    submitBtn.disabled = true;

    const errorFields = [
      "editDiscountType", "editDiscountValue", "editExpirationDate", "editDescription"
    ]
    errorFields.forEach(field => {
      const el = document.getElementById(`${field}Error`);
      if (el) el.innerText = '';
    });

    const formData = new FormData(form)
    const jsonData = {}
    for (const [key, value] of formData.entries()) {
      if (jsonData[key]) {
        if (Array.isArray(jsonData[key])) {
          jsonData[key].push(value);
        } else {
          jsonData[key] = [jsonData[key], value];
        }
      } else {
        jsonData[key] = value;
      }
    }
    try {
      const response = await fetch(form.action, {
        method: form.method,
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(jsonData),
      });

      if (!response.ok) {
        const data = await response.json()

        if (data.errors) {
          for (const [field, msg] of Object.entries(data.errors)) {
            const el = document.getElementById(`${field}Error`);
            if (el) el.innerText = msg;
          }
        } else if (data.message) {
          alert(data.message);
        }
      } else {
        closeEditOfferModal()
        window.location.reload();
      }

    } catch (err) {
      console.error('Error submitting edit offer:', err);
      alert('An error occurred. Please try again.');
    } finally {
      submitBtn.disabled = false;
    }

  })





</script>