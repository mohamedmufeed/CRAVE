<link rel="stylesheet" href="/admin/category.css">
<aside class="sidebar">
  <div class="logo">
    <a class="navbar-brand" href="index.html">CRAV<span style="font-weight:lighter;">E</span></a>
  </div>
  <nav class="menu">
    <ul>
      <li><a href="/admin/dashboard">Dashboard</a></li>
      <li><a href="/admin/productManagement">Products</a></li>
      <li><a href="/admin/orderManagement">Orders</a></li>
      <li><a href="/admin/couponManagement">Coupon</a></li>
      <li><a href="/admin/inventory">Inventory</a></li>
      <li><a href="/admin/offerManagement">Offers</a></li>
      <li><a href="/admin/userManagement"> User Management</a></li>
      <li class="higlight"><a href="/admin/category"> Category</a></li>
      <li><a href="/admin/salesReport"> Sales Report</a></li>

    </ul>
  </nav>
</aside>



<!-- Main Content -->


<div class="main-content">
  <header class="dashboard-header">
    <h1>Category</h1>
    <div>
      <form class="form-inline my-2 my-lg-0" action="/admin/category/search" method="GET">
        <input class="form-control mr-sm-2" type="search" name="search" placeholder="Search" aria-label="Search">

      </form>
    </div>
  </header>
  <button class="add-btn" onclick="addCategoryModal()">Add Category</button>
  <!-- User Table Section -->
  {{#if category.length}}
  <section class="user-table">
    <h2>All Category</h2>
    <div class="table-container">
      <table>
        <thead>
          <tr>


            <th> Category Name</th>
            <th>Material</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>

          {{#each category}}
          <tr>

            <td>{{this.name}}</td>
            <td>{{this.material}}</td>

            <td class="action-buttons">
              <div class="buttons">

                <button class="btn"
                  onclick="openEditCtegoryModal('{{this.name}}','{{this._id}}','{{this.material}}')">Edit</button>


                {{#if this.isListed}}
                <form action="/admin/category/unlist/{{this._id}}?_method=PATCH" method="POST">
                  <button type="submit" class="btn unblock-btn">Unlist</button>
                </form>
                {{else}}
                <form action="/admin/category/list/{{this._id}}?_method=PATCH" method="POST">
                  <button type="submit" class="btn block-btn">List</button>
                </form>
                {{/if}}
              </div>
            </td>
          </tr>
          {{/each}}



          <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center pages custom-pagination">
              {{#if previousPage}}
              <li class="page-item">
                <a class="page-link" href="?page={{previousPage}}" aria-label="Previous">
                  <span aria-hidden="true">&laquo;</span>
                </a>
              </li>
              {{/if}}

              {{#each (range 1 totalPages)}}
              <li class="page-item {{#if (isEqual this ../currentPage)}}active{{/if}}">
                <a class="page-link" href="?page={{this}}">{{this}}</a>
              </li>
              {{/each}}

              {{#if nextPage}}
              <li class="page-item">
                <a class="page-link" href="?page={{nextPage}}" aria-label="Next">
                  <span aria-hidden="true">&raquo;</span>
                </a>
              </li>
              {{/if}}
            </ul>
          </nav>
          {{else}}
  </section>
  {{!-- pagination --}}

</div>



<div class="no-results ">
  <div class="icon">üîç</div>
  <div class="message">No results found</div>
  <div class="sub-message">Try adjusting your search to find what you're looking for.</div>
</div>

{{/if}}
{{!-- end pagination --}}

{{!-- edit category modal --}}

<div class="modal" id="editCategoryModal" style="display:none">
  <div class="modal-content">
    <span class="close" onclick="closeEditModal()">&times;</span>
    <h2>Edit Category</h2>
    <form id="editCategoryForm" method="POST" action="/admin/category/edit/{{this._id}}?_method=PUT">
      {{!-- <input type="hidden" name="_method" value="PUT" /> --}}
      <label for="categoryName">Category Name:</label>
      <input type="text" id="categoryName" name="name" value="{{this.name}}" />
      <div id="editcategoryError" style="  color: rgba(247, 39, 39, 0.757);" ></div>
      <label for="categoryMaterial">Material:</label>
      <input type="text" id="categoryMaterial" name="material" value="{{this.material}}" />
       <div id="editmaterialError" style="  color: rgba(247, 39, 39, 0.757);" ></div>
      <button type="submit" class="btn">Update Category</button>
    </form>
  </div>
</div>





{{!-- add category modal --}}

<div class="modal" id="addCategoryModal" style="display:none;">
  <div class="modal-content">
    <span class="close" onclick="closeaddCategoryModal()">&times;</span>
    <h2>Add Category</h2>
    <form id="addCategoryForm" method="POST" action="/admin/category/add">
      <label for="categoryName">Category Name:</label>
      <input type="text" id="categoryName" name="name" />
      <div id="categoryError" style="  color: rgba(247, 39, 39, 0.757);"></div>
      <label for="categoryMaterial">Material:</label>
      <input type="text" id="categoryMaterial" name="material" />
      <div id="materialError" style=" color: rgba(247, 39, 39, 0.757);"></div>
      <button type="submit" class="btn">Add Category</button>
    </form>
  </div>
</div>


<script>
  //edit modal
  function openEditCtegoryModal(categoryName, categoryId, categoryMaterial) {
    document.getElementById("editCategoryModal").style.display = "block";
    document.getElementById("categoryName").value = categoryName;
    document.getElementById("categoryMaterial").value = categoryMaterial;
    document.getElementById("editCategoryForm").action = `/admin/category/edit/${categoryId}?_method=PUT`;
  }

  function closeEditModal() {
    document.getElementById("editCategoryModal").style.display = "none";
  }

  document.getElementById("editCategoryModal").addEventListener("submit", async (event) => {
    let isValid=true
    const data = {}
    const formData = new FormData(event.target)
    formData.forEach((value, key) => {
      data[key] = value
    })
    const { material, name } = data

 document.getElementById("editcategoryError").innerText = "";
  document.getElementById("editmaterialError").innerText = "";

  if (material.length < 3) {
    document.getElementById("editmaterialError").innerText = "Material should be greater than 2 letters.";
    isValid = false;
  }

  if (name.length < 2) {
    document.getElementById("editcategoryError").innerText = "Name should be greater than 2 letters.";
    isValid = false;
  }

  if (typeof name !== "string" || !isNaN(name)) {
    document.getElementById("editcategoryError").innerText = "Name should be a string.";
    isValid = false;
  }

  if (typeof material !== "string" || !isNaN(material)) {
    document.getElementById("editmaterialError").innerText = "Material should be a string.";
    isValid = false;
  }

  const pattern = /^[a-zA-Z]+$/;
  if (!pattern.test(material)) {
    document.getElementById("editmaterialError").innerText = "Material should contain only alphabetic characters.";
    isValid = false;
  }

  if (!pattern.test(name)) {
    document.getElementById("editcategoryError").innerText = "Name should contain only alphabetic characters.";
    isValid = false;
  }

  if (!isValid) {
    event.preventDefault();
  }

  })

  //edit modal ends


  //add modal starts

  function addCategoryModal() {
    document.getElementById("addCategoryModal").style.display = "block"

  }
  function closeaddCategoryModal() {
    document.getElementById("addCategoryModal").style.display = "none"
  }

  document.getElementById("addCategoryModal").addEventListener("submit", async (event) => {
let isValid=true
    const data = {}
    const formData = new FormData(event.target)
    formData.forEach((value, key) => {
      data[key] = value
    })
    const { material, name } = data
    document.getElementById("categoryError").innerText = "";
  document.getElementById("materialError").innerText = "";

  if (material.length < 3) {
    document.getElementById("materialError").innerText = "Material should be greater than 2 letters.";
    isValid = false;
  }

  if (name.length < 2) {
    document.getElementById("categoryError").innerText = "Name should be greater than 2 letters.";
    isValid = false;
  }

  if (typeof name !== "string" || !isNaN(name)) {
    document.getElementById("categoryError").innerText = "Name should be a string.";
    isValid = false;
  }

  if (typeof material !== "string" || !isNaN(material)) {
    document.getElementById("materialError").innerText = "Material should be a string.";
    isValid = false;
  }

  const pattern = /^[a-zA-Z]+$/;
  if (!pattern.test(material)) {
    document.getElementById("materialError").innerText = "Material should contain only alphabetic characters.";
    isValid = false;
  }

  if (!pattern.test(name)) {
    document.getElementById("categoryError").innerText = "Name should contain only alphabetic characters.";
    isValid = false;
  }

  if (!isValid) {
    event.preventDefault();
  }

  })
</script>